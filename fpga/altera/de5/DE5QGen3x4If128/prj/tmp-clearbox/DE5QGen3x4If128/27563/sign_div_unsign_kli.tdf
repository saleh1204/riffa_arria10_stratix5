--sign_div_unsign DEN_REPRESENTATION="UNSIGNED" DEN_WIDTH=8 LPM_PIPELINE=9 MAXIMIZE_SPEED=6 NUM_REPRESENTATION="UNSIGNED" NUM_WIDTH=32 SKIP_BITS=0 aclr clock denominator numerator quotient remainder
--VERSION_BEGIN 17.1 cbx_cycloneii 2017:10:19:12:43:07:SJ cbx_lpm_abs 2017:10:19:12:43:07:SJ cbx_lpm_add_sub 2017:10:19:12:43:07:SJ cbx_lpm_divide 2017:10:19:12:43:07:SJ cbx_mgl 2017:10:19:13:11:58:SJ cbx_nadder 2017:10:19:12:43:07:SJ cbx_stratix 2017:10:19:12:43:07:SJ cbx_stratixii 2017:10:19:12:43:07:SJ cbx_util_mgl 2017:10:19:12:43:07:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.


FUNCTION alt_u_div_3of (aclr, clock, denominator[7..0], numerator[31..0])
RETURNS ( quotient[31..0], remainder[7..0]);

--synthesis_resources = lut 284 reg 729 
SUBDESIGN sign_div_unsign_kli
( 
	aclr	:	input;
	clock	:	input;
	denominator[7..0]	:	input;
	numerator[31..0]	:	input;
	quotient[31..0]	:	output;
	remainder[7..0]	:	output;
) 
VARIABLE 
	divider : alt_u_div_3of;
	norm_num[31..0]	: WIRE;
	protect_quotient[31..0]	: WIRE;
	protect_remainder[7..0]	: WIRE;

BEGIN 
	divider.aclr = aclr;
	divider.clock = clock;
	divider.denominator[] = denominator[];
	divider.numerator[] = norm_num[];
	norm_num[] = numerator[];
	protect_quotient[] = divider.quotient[];
	protect_remainder[] = divider.remainder[];
	quotient[] = protect_quotient[];
	remainder[] = protect_remainder[];
END;
--VALID FILE
