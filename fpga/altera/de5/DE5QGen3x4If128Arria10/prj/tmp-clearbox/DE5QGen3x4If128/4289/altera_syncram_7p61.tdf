--altera_syncram ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES="CARE" ADDRESS_REG_B="CLOCK0" CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Arria 10" LOW_POWER_MODE="NONE" NUMWORDS_A=16 NUMWORDS_B=16 OPERATION_MODE="DUAL_PORT" OUTDATA_REG_B="CLOCK0" WIDTH_A=128 WIDTH_B=128 WIDTHAD_A=4 WIDTHAD_B=4 address_a address_b clock0 clocken0 data_a q_b wren_a CARRY_CHAIN="MANUAL" CYCLONEII_M4K_COMPATIBILITY="ON"
--VERSION_BEGIN 17.1 cbx_altera_syncram 2017:10:19:12:43:07:SJ cbx_altera_syncram_nd_impl 2017:10:19:12:43:07:SJ cbx_altsyncram 2017:10:19:12:43:07:SJ cbx_cycloneii 2017:10:19:12:43:07:SJ cbx_lpm_add_sub 2017:10:19:12:43:07:SJ cbx_lpm_compare 2017:10:19:12:43:07:SJ cbx_lpm_decode 2017:10:19:12:43:07:SJ cbx_lpm_mux 2017:10:19:12:43:07:SJ cbx_mgl 2017:10:19:13:11:58:SJ cbx_nadder 2017:10:19:12:43:07:SJ cbx_stratix 2017:10:19:12:43:07:SJ cbx_stratixii 2017:10:19:12:43:07:SJ cbx_stratixiii 2017:10:19:12:43:07:SJ cbx_stratixv 2017:10:19:12:43:07:SJ cbx_util_mgl 2017:10:19:12:43:07:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.


FUNCTION altsyncram_5h64 (address_a[3..0], address_b[3..0], clock0, clocken0, data_a[127..0], wren_a)
RETURNS ( q_b[127..0]);

--synthesis_resources = M20K 4 
SUBDESIGN altera_syncram_7p61
( 
	address_a[3..0]	:	input;
	address_b[3..0]	:	input;
	clock0	:	input;
	clocken0	:	input;
	data_a[127..0]	:	input;
	q_b[127..0]	:	output;
	wren_a	:	input;
) 
VARIABLE 
	altsyncram5 : altsyncram_5h64;

BEGIN 
	altsyncram5.address_a[] = address_a[];
	altsyncram5.address_b[] = address_b[];
	altsyncram5.clock0 = clock0;
	altsyncram5.clocken0 = clocken0;
	altsyncram5.data_a[] = data_a[];
	altsyncram5.wren_a = wren_a;
	q_b[] = altsyncram5.q_b[];
END;
--VALID FILE
